
services:
  postgres:
    image: postgres:15
    container_name: postgres-powerx
    environment:
      POSTGRES_USER: "{POSTGRES_USER}"
      POSTGRES_PASSWORD: "{POSTGRES_PASSWORD}"
      POSTGRES_DB: "{POSTGRES_DB}"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    ports:
      - "${POESGRES_PORT}:5432"
    networks:
      - powerx-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U powerx"]
      interval: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis-powerx
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - powerx-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 10s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: minio-powerx
    command: server --address :9001 --console-address ":9090" /mnt/data
    environment:
      MINIO_CONFIG_ENV_FILE: /etc/config.env
      MINIO_ROOT_USER: "${MINIO_ROOT_USER}"
      MINIO_ROOT_PASSWORD: "${MINIO_ROOT_PASSWORD}"
    volumes:
      - ./data/minio:/mnt/data
      - ./etc/minio.env:/etc/config.env
    ports:
      # api port
      - "${MINIO_API_PORT}:9001"
      # console port
      - "${MINIO_CONSOLE_PORT}:9090"
    networks:
      - powerx-network

  server:
    build:
      context: ./
      dockerfile: docker/Dockerfile
    container_name: server-powerx
    volumes:
      - ./resource/:/app/resource/
      # - ./etc/powerx.yaml:/app/etc/powerx.yaml
      - ./logs/powerx/:/app/logs/
    ports:
      - "${BACKEND_PORT}:8888"
    networks:
      - powerx-network
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8888"]
      interval: 30s
      timeout: 10s
      retries: 5


  dashboard:
    build:
      context: ./
      dockerfile: dashboard/Dockerfile
    container_name: dashboard-powerx
    volumes:
      - ./logs/nginx/server:/var/log/nginx/server
      - ./logs/nginx/dashboard:/var/log/nginx/dashboard
      - ./dashboard/nginx/servers:/etc/nginx/sites-enabled/
      # - ./dashboard/nginx/servers_ssl:/etc/nginx/sites-enabled/
      # - ./dashboard/nginx/ssl:/etc/ssl
    ports:
      - "${DASHBOARD_PORT}:80"
    networks:
      - powerx-network
    depends_on:
      postgres:
        condition: service_healthy
      server:
        condition: service_healthy
  web:
    build:
      context: ./
      dockerfile: web/Dockerfile
    container_name: web-powerx
    volumes:
      - ./logs/nginx/server:/var/log/nginx/server
      - ./logs/nginx/web:/var/log/nginx/web
      - ./web/nginx/servers:/etc/nginx/sites-enabled/
      # - ./web/nginx/servers_ssl:/etc/nginx/sites-enabled/
      # - ./web/nginx/ssl:/etc/ssl
    ports:
      - "${WEB_PORT}:80"
    networks:
      - powerx-network
    depends_on:
      postgres:
        condition: service_healthy
      server:
        condition: service_healthy

  network-tools:
    image: nicolaka/netshoot:latest
    container_name: network-tools-powerx
    command: sleep infinity
    networks:
      - powerx-network

networks:
  powerx-network:
    driver: bridge
